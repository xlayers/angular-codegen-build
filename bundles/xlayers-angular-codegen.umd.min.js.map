{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@xlayers/angular-codegen/lib/angular-aggregator.service.ts","ng://@xlayers/angular-codegen/lib/element/angular-element-aggregator.service.ts","ng://@xlayers/angular-codegen/lib/element/angular-element-codegen.service.ts","ng://@xlayers/angular-codegen/lib/angular-codegen.module.ts","ng://@xlayers/angular-codegen/lib/element/angular-element-codegen.module.ts","ng://@xlayers/angular-codegen/lib/angular-docgen.service.ts","ng://@xlayers/angular-codegen/lib/angular-bootstrap.service.ts","ng://@xlayers/angular-codegen/lib/angular-codegen.service.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","AngularAggregatorService","formatService","webCodeGenService","aggregate","current","data","options","fileName","normalizeName","name","map","file","language","kind","uri","componentDir","renderComponent","renderSpec","className","normalizedName","xmlPrefix","Injectable","args","providedIn","FormatService","WebCodeGenService","AngularElementAggregatorService","angularAggregatorService","componentPathName","renderReadme","meta","app","renderElementModule","renderWebpackExtra","renderCopyUmdBundlesScript","renderSampleIndexHtml","tagName","codeSpan","text","DIST_FOLDER_NAME","componentName","AngularElementCodeGenService","symbolService","imageService","webCodeGen","angularElementAggretatorService","layerService","compute","compileOptions","_this","pages","flatMap","page","visit","identify","context","visitContent","visitLayer","visitSymbolMaster","lookup","layer","symbolMaster","textTagName","bitmapTagName","blockTagName","cssPrefix","assetDir","SymbolService","ImageService","LayerService","AngularCodeGenModule","NgModule","imports","WebCodeGenModule","AngularElementCodeGenModule","AngularDocGenService","AngularBootstrapService","generate","files","renderRoutingModule","renderModule","importStatements","renderImports","ngStatements","renderNgClasses","filter","endsWith","extractClassName","extractCompenentFileName","join","indent","split","replace","AngularCodeGenService","angularAggretatorService"],"mappings":";;;;;;;;;;;;;;oFA6BO,IAAIA,EAAW,WAQlB,OAPAA,EAAWC,OAAOC,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,IAE9E,OAAON,IAEKU,MAAMC,KAAMP,YAyFzB,SAASQ,EAAOC,EAAGV,GACtB,IAAIW,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UACjD,IAAKF,EAAG,OAAOD,EACf,IAAmBI,EAAYC,EAA3BhB,EAAIY,EAAEL,KAAKI,GAAOM,EAAK,GAC3B,IACI,WAAc,IAANhB,GAAgBA,KAAM,MAAQc,EAAIf,EAAEkB,QAAQC,MAAMF,EAAGG,KAAKL,EAAEM,OAExE,MAAOC,GAASN,EAAI,CAAEM,MAAOA,GACjC,QACQ,IACQP,IAAMA,EAAEI,OAASP,EAAIZ,EAAU,SAAIY,EAAEL,KAAKP,GAE1D,QAAkB,GAAIgB,EAAG,MAAMA,EAAEM,OAE7B,OAAOL,EAGJ,SAASM,IACZ,IAAK,IAAIN,EAAK,GAAIjB,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAC3CiB,EAAKA,EAAGO,OAAOd,EAAOR,UAAUF,KACpC,OAAOiB,mBCxIT,SAAAQ,EACmBC,EACAC,GADAlB,KAAAiB,cAAAA,EACAjB,KAAAkB,kBAAAA,SAGnBF,EAAApB,UAAAuB,UAAA,SACEC,EACAC,EACAC,OAEMC,EAAWvB,KAAKiB,cAAcO,cAAcJ,EAAQK,MAC1D,OAAAX,EACKd,KAAKkB,kBAAkBC,UAAUC,EAASC,EAAMC,GAASI,KAAG,SAACC,GAC9D,OAAQA,EAAKC,UACX,IAAK,OACH,OAAA1C,EAAA,GACKyC,EAAI,CACPE,KAAM,UACNC,IAAQR,EAAQS,aAAY,IAAIR,EAAQ,oBAG5C,IAAK,MACH,OAAArC,EAAA,GACKyC,EAAI,CACPE,KAAM,UACNC,IAAQR,EAAQS,aAAY,IAAIR,EAAQ,mBAG5C,QACE,OAAArC,EAAA,GACKyC,EAAI,CACPE,KAAM,gBAGZ,CACF,CACEA,KAAM,UACNjB,MAAOZ,KAAKgC,gBAAgBZ,EAAQK,KAAMH,GAC1CM,SAAU,aACVE,IAAQR,EAAQS,aAAY,IAAIR,EAAQ,iBAE1C,CACEM,KAAM,UACNjB,MAAOZ,KAAKiC,WAAWb,EAAQK,MAC/BG,SAAU,aACVE,IAAQR,EAAQS,aAAY,IAAIR,EAAQ,eAK9CP,EAAApB,UAAAoC,gBAAA,SAAgBP,EAAcH,OACtBY,EAAYlC,KAAKiB,cAAciB,UAAUT,GACzCU,EAAiBnC,KAAKiB,cAAcO,cAAcC,GAExD,MAAO,6EADS,GAAGH,EAAQc,UAAYD,GAKrB,yBACFA,EAAc,uCACfA,EAAc,sCAElBD,EAAS,gBAGdlB,EAAApB,UAAAqC,WAAR,SAAmBR,OACXS,EAAYlC,KAAKiB,cAAciB,UAAUT,GAE/C,MAAO,uFAEAS,EAAS,cAHClC,KAAKiB,cAAcO,cAAcC,GAGZ,oBAE9BS,EAAS,yCACFA,EAAS,+CACMA,EAAS,yGAIpBA,EAAS,wHAMQA,EAAS,sMAxFhDG,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDALLC,EAAAA,qBADAC,EAAAA,gMCeTC,EAAA,WAIE,SAAAA,EACmBzB,EACAC,EACAyB,GAFA3C,KAAAiB,cAAAA,EACAjB,KAAAkB,kBAAAA,EACAlB,KAAA2C,yBAAAA,SAGnBD,EAAA9C,UAAAuB,UAAA,SACEC,EACAC,EACAC,OAEMC,EAAWvB,KAAKiB,cAAcO,cAAcJ,EAAQK,MACpDmB,EAAuBtB,EAAQS,aAAY,IAAIR,EAAQ,aAE7D,OAAAT,EAAA,CACE,CACEgB,IAAK,YACLlB,MAAOZ,KAAK6C,aAAaxB,EAAKyB,KAAKC,IAAKzB,GACxCM,SAAU,WACVC,KAAM,SAEL7B,KAAKkB,kBAAkBC,UAAUC,EAASC,EAAMC,GAASI,KAAG,SAACC,GAC9D,OAAQA,EAAKC,UACX,IAAK,OACH,OAAA1C,EAAA,GACKyC,EAAI,CACPE,KAAM,UACNC,IAAQR,EAAQS,aAAY,IAAIR,EAAQ,oBAG5C,IAAK,MACH,OAAArC,EAAA,GACKyC,EAAI,CACPE,KAAM,UACNC,IAAQR,EAAQS,aAAY,IAAIR,EAAQ,mBAG5C,QACE,OAAArC,EAAA,GACKyC,EAAI,CACPE,KAAM,uBAGZ,CACF,CACEC,IAAQc,EAAiB,MACzBhC,MAAOZ,KAAK2C,yBAAyBX,gBACnCZ,EAAQK,KACRH,GAEFM,SAAU,aACVC,KAAM,WAER,CACEC,IArEwB,gBAsExBlB,MAAOZ,KAAKgD,oBACV5B,EAAQK,KACRH,EACAsB,GAEFhB,SAAU,aACVC,KAAM,kBAER,CACEC,IA9E8B,mBA+E9BlB,MAAOZ,KAAKiD,qBACZrB,SAAU,aACVC,KAAM,kBAER,CACEC,IAnF6B,kBAoF7BlB,MAAOZ,KAAKkD,6BACZtB,SAAU,aACVC,KAAM,kBAER,CACEC,IAtFsB,aAuFtBlB,MAAOZ,KAAKmD,sBAAsB/B,EAAQK,KAAMH,GAChDM,SAAU,OACVC,KAAM,qBAKJa,EAAA9C,UAAAiD,aAAR,SAAqBpB,EAAcH,OAC3BY,EAAYlC,KAAKiB,cAAciB,UAAUT,GACzCU,EAAiBnC,KAAKiB,cAAcO,cAAcC,GAClD2B,EAAU,GAAG9B,EAAQc,UAAYD,EACjCkB,EAAQ,SAAGC,GAAQ,MAAA,IAAMA,EAAO,KAEtC,MAAO,icAMRD,EACG,kBACD,0EACeA,EAAS5B,GATlB,2oBAuBwE4B,EAC7EnB,GACD,4BACoBmB,EAAS,WAAU,wBAAwBA,EAnIpC,iBAqI3B,0BAA0BA,EAAS,oBAAmB,4BACnCA,EArIc,oBAqIyB,QAAQA,EApIlC,mBAuG1B,mRAqCKA,EACVE,gCAtCK,mIA+CNH,EAAO,MAAMA,EA/CP,kKAkDuCC,EAtJpB,cAwJzB,0DACiDA,EA5JjB,mBAuG1B,sLA+DDX,EAAA9C,UAAAoD,oBAAR,SACEvB,EACAH,EACAsB,OAGMY,EADYxD,KAAKiB,cAAciB,UAAUT,GACb,YAC5BU,EAAiBnC,KAAKiB,cAAcO,cAAcC,GAExD,MAEE,yLAIK+B,EAAa,cAAcZ,EAAiB,kFAMjDY,EAAa,qCAGbA,EAAa,sHAKuBA,EAAa,kDArBnC,GAAGlC,EAAQc,UAAYD,GAsBP,qDAQ1BO,EAAA9C,UAAAqD,mBAAR,WACE,MAAO,6PAaDP,EAAA9C,UAAAsD,2BAAR,WACE,MAAO,+wBAiBDR,EAAA9C,UAAAuD,sBAAR,SAA8B1B,EAAcH,OACpCa,EAAiBnC,KAAKiB,cAAcO,cAAcC,GAClD2B,EAAU,GAAG9B,EAAQc,UAAYD,EAEvC,MAAO,6kDAyCRiB,EAAO,MAAMA,EAAO,iDAhRtBf,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDAhBLC,EAAAA,qBACAC,EAAAA,yBACAzB,uLAaT,oBCLE,SAAAyC,EACmBC,EACAC,EACAC,EACAC,EACAC,GAJA9D,KAAA0D,cAAAA,EACA1D,KAAA2D,aAAAA,EACA3D,KAAA4D,WAAAA,EACA5D,KAAA6D,gCAAAA,EACA7D,KAAA8D,aAAAA,SAGnBL,EAAA7D,UAAAmE,QAAA,SACE3C,EACAC,EACAC,GAEAtB,KAAK4D,WAAWG,QAAQ3C,EAASC,EAAMrB,KAAKgE,eAAe1C,KAG7DmC,EAAA7D,UAAAuB,UAAA,SAAUE,EAAoBC,GAA9B,IAAA2C,EAAAjE,KACE,OAAOqB,EAAK6C,MAAMC,SAAO,SAACC,GACxB,OAAAH,EAAKI,MAAMD,EAAM/C,EAAM4C,EAAKD,eAAe1C,QAI/CmC,EAAA7D,UAAA0E,SAAA,SAASlD,GACP,OAAOpB,KAAK4D,WAAWU,SAASlD,IAGlCqC,EAAA7D,UAAA2E,QAAA,SAAQnD,GACN,OAAOpB,KAAK4D,WAAWW,QAAQnD,IAGzBqC,EAAA7D,UAAAyE,MAAR,SACEjD,EACAC,EACAC,GAEA,OAAOtB,KAAKwE,aAAapD,EAASC,EAAMC,GAASP,OAC/Cf,KAAK6D,gCAAgC1C,UAAUC,EAASC,EAAMC,KAI1DmC,EAAA7D,UAAA4E,aAAR,SACEpD,EACAC,EACAC,GAEA,OAAItB,KAAK8D,aAAaQ,SAASlD,GACtBpB,KAAKyE,WAAWrD,EAASC,EAAMC,GAC7BtB,KAAK0D,cAAcY,SAASlD,GAC9BpB,KAAK0E,kBAAkBtD,EAASC,EAAMC,GACpCtB,KAAK2D,aAAaW,SAASlD,GAC7BpB,KAAK2D,aAAaxC,UAAUC,EAASC,EAAMC,GAE7C,IAGDmC,EAAA7D,UAAA6E,WAAR,SACErD,EACAC,EACAC,GAHF,IAAA2C,EAAAjE,KAKE,OAAOA,KAAK8D,aACTa,OAAOvD,GACP+C,SAAO,SAACS,GAAS,OAAAX,EAAKO,aAAaI,EAAOvD,EAAMC,OAG7CmC,EAAA7D,UAAA8E,kBAAR,SACEtD,EACAC,EACAC,OAEMuD,EAAe7E,KAAK0D,cAAciB,OAAOvD,EAASC,GACxD,OAAIwD,EACK7E,KAAKqE,MAAMQ,EAAcxD,EAAMC,GAEjC,IAGDmC,EAAA7D,UAAAoE,eAAR,SAAuB1C,GACrB,OAAApC,EAAA,CACE4F,YAAa,OACbC,cAAe,MACfC,aAAc,MACd5C,UAAW,OACX6C,UAAW,OACXlD,aAAc,aACdmD,SAAU,UACP5D,wBA1FRe,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDAPS4C,EAAAA,qBAAdC,EAAAA,oBACA3C,EAAAA,yBACAC,SAF6B2C,EAAAA,2PCDtC,IAAAC,EAAA,WAGA,SAAAA,KAGmC,2BAHlCC,EAAAA,SAAQjD,KAAA,CAAC,CACRkD,QAAS,CAACC,EAAAA,sBAEuBH,EANnC,GCAAI,EAAA,WAIA,SAAAA,KAG0C,2BAHzCH,EAAAA,SAAQjD,KAAA,CAAC,CACRkD,QAAS,CAACC,EAAAA,iBAAkBH,OAEYI,EAP1C,GCAAC,EAAA,WAEA,SAAAA,YAIEA,EAAA/F,UAAAuB,UAAA,SAAUE,GACR,MAAO,CACL,CACES,IAAK,YACLlB,MAAOZ,KAAK6C,aAAaxB,EAAKyB,KAAKC,KACnCnB,SAAU,WACVC,KAAM,UAKJ8D,EAAA/F,UAAAiD,aAAR,SAAqBpB,GACnB,MAAO,qBACSA,EAAI,sxBAjBvBY,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,kHAHd,GCAAqD,EAAA,WASE,SAAAA,EAA6B3E,GAAAjB,KAAAiB,cAAAA,SAE7B2E,EAAAhG,UAAAiG,SAAA,SAASC,GACP,MAAO,CACL,CACEhE,IAAK,4BACLlB,MAAOZ,KAAK+F,sBACZnE,SAAU,aACVC,KAAM,WAER,CACEC,IAAK,oBACLlB,MAAOZ,KAAKgG,aAAaF,GACzBlE,SAAU,aACVC,KAAM,aAKJ+D,EAAAhG,UAAAmG,oBAAR,WACE,MAAO,wWAgBDH,EAAAhG,UAAAoG,aAAR,SAAqBF,OACbG,EAAmBjG,KAAKkG,cAAcJ,GACtCK,EAAenG,KAAKoG,gBAAgBN,GAC1C,OACFG,EAAgB,uCAIhBE,EAAY,yBAGZA,EAAY,kFASJP,EAAAhG,UAAAsG,cAAR,SAAsBJ,GAAtB,IAAA7B,EAAAjE,KACE,MAAO,CACL,4CACA,mDAECe,OACC+E,EACGO,QAAM,SAAC1E,GAAQ,OAAAA,EAAKG,IAAIwE,SAAS,oBACjC5E,KAAG,SACFC,GACE,MAAA,YAAYsC,EAAKsC,iBACf5E,GACD,cAAcsC,EAAKuC,yBAAyB7E,GAAK,SAGzD8E,KAAK,OAGFb,EAAAhG,UAAAwG,gBAAR,SAAwBN,GAAxB,IAAA7B,EAAAjE,KACE,OAAO8F,EACJO,QAAM,SAAC1E,GAAQ,OAAAA,EAAKG,IAAIwE,SAAS,oBACjC5E,KAAG,SAACC,GAAQ,OAAAsC,EAAKhD,cAAcyF,OAAO,EAAGzC,EAAKsC,iBAAiB5E,OAC/D8E,KAAK,QAGFb,EAAAhG,UAAA2G,iBAAR,SAAyB5E,OACjBG,EAAMH,EAAKG,IAAI6E,MAAM,KACrBpF,EAAWO,EAAIA,EAAIpC,OAAS,GAAGkH,QAAQ,gBAAiB,IAC9D,OAAO5G,KAAKiB,cAAciB,UAAaX,EAAQ,cAGzCqE,EAAAhG,UAAA4G,yBAAR,SAAiC7E,GAC/B,OAAOA,EAAKG,IAAI6E,MAAM,OAAO,wBA5FhCtE,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDALLC,EAAAA,qJADT,oBCgBE,SAAAqE,EACmBnD,EACAC,EACAC,EACA3C,EACA6F,EACAhD,GALA9D,KAAA0D,cAAAA,EACA1D,KAAA2D,aAAAA,EACA3D,KAAA4D,WAAAA,EACA5D,KAAAiB,cAAAA,EACAjB,KAAA8G,yBAAAA,EACA9G,KAAA8D,aAAAA,SAGnB+C,EAAAjH,UAAAmE,QAAA,SACE3C,EACAC,EACAC,GAEAtB,KAAK4D,WAAWG,QAAQ3C,EAASC,EAAMrB,KAAKgE,eAAe1C,KAG7DuF,EAAAjH,UAAAuB,UAAA,SAAUE,EAAoBC,GAA9B,IAAA2C,EAAAjE,KACQ8F,EAAQzE,EAAK6C,MAAMC,SAAO,SAACC,GAC/B,OAAAH,EAAKI,MAAMD,EAAM/C,EAAM4C,EAAKD,eAAe1C,OAG7C,OAAAR,EAAA,CACE,CACEgB,IAAK,4BACLlB,MAAOZ,KAAK+F,sBACZnE,SAAU,aACVC,KAAM,WAER,CACEC,IAAK,oBACLlB,MAAOZ,KAAKgG,aAAaF,GACzBlE,SAAU,aACVC,KAAM,YAELiE,IAIPe,EAAAjH,UAAA0E,SAAA,SAASlD,GACP,OAAOpB,KAAK4D,WAAWU,SAASlD,IAGlCyF,EAAAjH,UAAA2E,QAAA,SAAQnD,GACN,OAAOpB,KAAK4D,WAAWW,QAAQnD,IAGzByF,EAAAjH,UAAAyE,MAAR,SACEjD,EACAC,EACAC,GAEA,OAAOtB,KAAKwE,aAAapD,EAASC,EAAMC,GAASP,OAC/Cf,KAAK8G,yBAAyB3F,UAAUC,EAASC,EAAMC,KAInDuF,EAAAjH,UAAA4E,aAAR,SACEpD,EACAC,EACAC,GAEA,OAAItB,KAAK8D,aAAaQ,SAASlD,GACtBpB,KAAKyE,WAAWrD,EAASC,EAAMC,GAC7BtB,KAAK0D,cAAcY,SAASlD,GAC9BpB,KAAK0E,kBAAkBtD,EAASC,EAAMC,GACpCtB,KAAK2D,aAAaW,SAASlD,GAC7BpB,KAAK2D,aAAaxC,UAAUC,EAASC,EAAMC,GAE7C,IAGDuF,EAAAjH,UAAA6E,WAAR,SACErD,EACAC,EACAC,GAHF,IAAA2C,EAAAjE,KAKE,OAAOA,KAAK8D,aACTa,OAAOvD,GACP+C,SAAO,SAACS,GAAS,OAAAX,EAAKO,aAAaI,EAAOvD,EAAMC,OAG7CuF,EAAAjH,UAAA8E,kBAAR,SACEtD,EACAC,EACAC,OAEMuD,EAAe7E,KAAK0D,cAAciB,OAAOvD,EAASC,GACxD,OAAIwD,EACK7E,KAAKqE,MAAMQ,EAAcxD,EAAMC,GAEjC,IAGDuF,EAAAjH,UAAAoE,eAAR,SAAuB1C,GACrB,OAAApC,EAAA,CACE4F,YAAa,OACbC,cAAe,MACfC,aAAc,MACd5C,UAAW,OACX6C,UAAW,OACXlD,aAAc,aACdmD,SAAU,UACP5D,IAICuF,EAAAjH,UAAAmG,oBAAR,WACE,MAAO,sWAgBDc,EAAAjH,UAAAoG,aAAR,SAAqBF,OACbG,EAAmBjG,KAAKkG,cAAcJ,GACtCK,EAAenG,KAAKoG,gBAAgBN,GAC1C,OACFG,EAAgB,uCAIhBE,EAAY,yBAGZA,EAAY,kFASJU,EAAAjH,UAAAsG,cAAR,SAAsBJ,GAAtB,IAAA7B,EAAAjE,KACE,MAAO,CACL,4CACA,mDAECe,OACC+E,EACGO,QAAM,SAAC1E,GAAQ,OAAAA,EAAKG,IAAIwE,SAAS,oBACjC5E,KAAG,SACFC,GACE,MAAA,YAAYsC,EAAKsC,iBACf5E,GACD,cAAcsC,EAAKuC,yBAAyB7E,GAAK,SAGzD8E,KAAK,OAGFI,EAAAjH,UAAAwG,gBAAR,SAAwBN,GAAxB,IAAA7B,EAAAjE,KACE,OAAO8F,EACJO,QAAM,SAAC1E,GAAQ,OAAAA,EAAKG,IAAIwE,SAAS,oBACjC5E,KAAG,SAACC,GAAQ,OAAAsC,EAAKhD,cAAcyF,OAAO,EAAGzC,EAAKsC,iBAAiB5E,OAC/D8E,KAAK,QAGFI,EAAAjH,UAAA2G,iBAAR,SAAyB5E,OACjBG,EAAMH,EAAKG,IAAI6E,MAAM,KACrBpF,EAAWO,EAAIA,EAAIpC,OAAS,GAAGkH,QAAQ,gBAAiB,IAC9D,OAAO5G,KAAKiB,cAAciB,UAAaX,EAAQ,cAGzCsF,EAAAjH,UAAA4G,yBAAR,SAAiC7E,GAC/B,OAAOA,EAAKG,IAAI6E,MAAM,OAAO,wBApLhCtE,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDAVZ4C,EAAAA,qBADAC,EAAAA,oBAKO3C,EAAAA,yBAFPD,EAAAA,qBAGOxB,SAJPqE,EAAAA","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { WebCodeGenService } from '@xlayers/web-codegen';\r\nimport { FormatService } from '@xlayers/sketch-lib';\r\n\r\ntype WebCodeGenOptions = any;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AngularAggregatorService {\r\n  constructor(\r\n    private readonly formatService: FormatService,\r\n    private readonly webCodeGenService: WebCodeGenService\r\n  ) {}\r\n\r\n  aggregate(\r\n    current: SketchMSLayer,\r\n    data: SketchMSData,\r\n    options: WebCodeGenOptions\r\n  ) {\r\n    const fileName = this.formatService.normalizeName(current.name);\r\n    return [\r\n      ...this.webCodeGenService.aggregate(current, data, options).map(file => {\r\n        switch (file.language) {\r\n          case 'html':\r\n            return {\r\n              ...file,\r\n              kind: 'angular',\r\n              uri: `${options.componentDir}/${fileName}.component.html`\r\n            };\r\n\r\n          case 'css':\r\n            return {\r\n              ...file,\r\n              kind: 'angular',\r\n              uri: `${options.componentDir}/${fileName}.component.css`\r\n            };\r\n\r\n          default:\r\n            return {\r\n              ...file,\r\n              kind: 'angular'\r\n            };\r\n        }\r\n      }),\r\n      {\r\n        kind: 'angular',\r\n        value: this.renderComponent(current.name, options),\r\n        language: 'typescript',\r\n        uri: `${options.componentDir}/${fileName}.component.ts`\r\n      },\r\n      {\r\n        kind: 'angular',\r\n        value: this.renderSpec(current.name),\r\n        language: 'typescript',\r\n        uri: `${options.componentDir}/${fileName}.spec.ts`\r\n      }\r\n    ];\r\n  }\r\n\r\n  renderComponent(name: string, options: WebCodeGenOptions) {\r\n    const className = this.formatService.className(name);\r\n    const normalizedName = this.formatService.normalizeName(name);\r\n    const tagName = `${options.xmlPrefix}${normalizedName}`;\r\n    return `\\\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: '${tagName}',\r\n  templateUrl: './${normalizedName}.component.html',\r\n  styleUrls: ['./${normalizedName}.component.css']\r\n})\r\nexport class ${className}Component {}`;\r\n  }\r\n\r\n  private renderSpec(name: string) {\r\n    const className = this.formatService.className(name);\r\n    const fileName = this.formatService.normalizeName(name);\r\n    return `\\\r\nimport { async, ComponentFixture, TestBed } from '@angular/core/testing';\r\nimport { ${className} } from \"./${fileName}\";\r\n\r\ndescribe('${className}Component', () => {\r\n  let component: ${className}Component;\r\n  let fixture: ComponentFixture<${className}Component>;\r\n\r\n  beforeEach(async(() => {\r\n    TestBed.configureTestingModule({\r\n      declarations: [${className}Component]\r\n    })\r\n    .compileComponents();\r\n  }));\r\n\r\n  beforeEach(() => {\r\n    fixture = TestBed.createComponent(${className}Component);\r\n    component = fixture.componentInstance;\r\n    fixture.detectChanges();\r\n  });\r\n\r\n  it('should create', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n});`;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormatService } from '@xlayers/sketch-lib';\r\nimport { WebCodeGenService } from '@xlayers/web-codegen';\r\nimport { AngularAggregatorService } from '../angular-aggregator.service';\r\n\r\nconst ELEMENT_MODULE_FILENAME = 'app.module.ts';\r\nconst EXTRA_WEBPACK_CONFIG_FILENAME = 'webpack.extra.js';\r\nconst COPY_BUNDLES_SCRIPT_FILENAME = 'copy.bundles.js';\r\nconst DIST_FOLDER_NAME = 'dist';\r\nconst BUNDLES_TARGET_PATH = `${DIST_FOLDER_NAME}/bundles`;\r\nconst SAMPLE_INDEX_FILENAME = 'index.html';\r\nconst ELEMENT_BUNDLE_FILENAME = 'main.js';\r\nconst ELEMENT_CREATOR_APPNAME = 'element-creator';\r\n\r\ntype WebCodeGenOptions = any;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AngularElementAggregatorService {\r\n  constructor(\r\n    private readonly formatService: FormatService,\r\n    private readonly webCodeGenService: WebCodeGenService,\r\n    private readonly angularAggregatorService: AngularAggregatorService\r\n  ) {}\r\n\r\n  aggregate(\r\n    current: SketchMSLayer,\r\n    data: SketchMSData,\r\n    options: WebCodeGenOptions\r\n  ) {\r\n    const fileName = this.formatService.normalizeName(current.name);\r\n    const componentPathName = `${options.componentDir}/${fileName}.component`;\r\n\r\n    return [\r\n      {\r\n        uri: 'README.md',\r\n        value: this.renderReadme(data.meta.app, options),\r\n        language: 'markdown',\r\n        kind: 'text'\r\n      },\r\n      ...this.webCodeGenService.aggregate(current, data, options).map(file => {\r\n        switch (file.language) {\r\n          case 'html':\r\n            return {\r\n              ...file,\r\n              kind: 'angular',\r\n              uri: `${options.componentDir}/${fileName}.component.html`\r\n            };\r\n\r\n          case 'css':\r\n            return {\r\n              ...file,\r\n              kind: 'angular',\r\n              uri: `${options.componentDir}/${fileName}.component.css`\r\n            };\r\n\r\n          default:\r\n            return {\r\n              ...file,\r\n              kind: 'angularElement'\r\n            };\r\n        }\r\n      }),\r\n      {\r\n        uri: `${componentPathName}.ts`,\r\n        value: this.angularAggregatorService.renderComponent(\r\n          current.name,\r\n          options\r\n        ),\r\n        language: 'typescript',\r\n        kind: 'angular'\r\n      },\r\n      {\r\n        uri: ELEMENT_MODULE_FILENAME,\r\n        value: this.renderElementModule(\r\n          current.name,\r\n          options,\r\n          componentPathName\r\n        ),\r\n        language: 'typescript',\r\n        kind: 'angularElement'\r\n      },\r\n      {\r\n        uri: EXTRA_WEBPACK_CONFIG_FILENAME,\r\n        value: this.renderWebpackExtra(),\r\n        language: 'javascript',\r\n        kind: 'angularElement'\r\n      },\r\n      {\r\n        uri: COPY_BUNDLES_SCRIPT_FILENAME,\r\n        value: this.renderCopyUmdBundlesScript(),\r\n        language: 'javascript',\r\n        kind: 'angularElement'\r\n      },\r\n      {\r\n        uri: SAMPLE_INDEX_FILENAME,\r\n        value: this.renderSampleIndexHtml(current.name, options),\r\n        language: 'html',\r\n        kind: 'angularElement'\r\n      }\r\n    ];\r\n  }\r\n\r\n  private renderReadme(name: string, options: WebCodeGenOptions) {\r\n    const className = this.formatService.className(name);\r\n    const normalizedName = this.formatService.normalizeName(name);\r\n    const tagName = `${options.xmlPrefix}${normalizedName}`;\r\n    const codeSpan = text => '`' + text + '`';\r\n    const codeBlock = '```';\r\n    return `\r\n**Notice:**\r\nThe current implement of [Angular Elements](https://angular.io/guide/elements) is in MVP (minimum viable product) state.\r\nSome features like content projection are not supported yet.\r\nKeep in mind that the following build process and feature support will be improved in the future.\r\nThe creation of the bundled Angular Element is based on the process defined by [Manfred Steyer](https://twitter.com/manfredsteyer)'s example from\r\n[${codeSpan(\r\n      'ngx-build-plus'\r\n    )}](https://github.com/manfredsteyer/ngx-build-plus).\r\n## How to use the ${codeSpan(name)} Angular Element\r\n1. In order to use an Angular Element as a web component, it first needs to be created, e.g. in the following way:\r\n    a) Use the Angular CLI to create a minimal app which will be used to create the Angular Element:\r\n    ${codeBlock}\r\n    ng new ${ELEMENT_CREATOR_APPNAME} --minimal --style css --routing false\r\n    cd ${ELEMENT_CREATOR_APPNAME}\r\n    ${codeBlock}\r\n    b) Add necessary dependencies for the following steps:\r\n    ${codeBlock}\r\n    ng add @angular/elements\r\n    ng add ngx-build-plus\r\n    npm install @webcomponents/custom-elements --save\r\n    npm install --save-dev copy\r\n    ${codeBlock}\r\n    c) Download and extract the files of this generation. Place the files of the ${codeSpan(\r\n      className\r\n    )}\r\n    into your standard ${codeSpan('src/app')} folder. Replace the ${codeSpan(\r\n      ELEMENT_MODULE_FILENAME\r\n    )} and remove the sample ${codeSpan('app.component.ts')}.\r\n    Extract the files ${codeSpan(EXTRA_WEBPACK_CONFIG_FILENAME)} and ${codeSpan(\r\n      COPY_BUNDLES_SCRIPT_FILENAME\r\n    )} into the project root.\r\n    e) Build the Angular Element:\r\n    ${codeBlock}\r\n    ng build --prod --extraWebpackConfig ${EXTRA_WEBPACK_CONFIG_FILENAME} --output-hashing none --single-bundle true\r\n    ${codeBlock}\r\n2. After the creation of the Angular Element, it can be found as single file\r\nweb component ${codeSpan(\r\n      DIST_FOLDER_NAME +\r\n        '/' +\r\n        ELEMENT_CREATOR_APPNAME +\r\n        '/' +\r\n        ELEMENT_BUNDLE_FILENAME\r\n    )} and can be consumed in the following way:\r\n${codeBlock}\r\n  // index.html\r\n  <script src=\"./${DIST_FOLDER_NAME}/${ELEMENT_CREATOR_APPNAME}/${ELEMENT_BUNDLE_FILENAME}\"></script>\r\n  <${tagName}></${tagName}>\r\n${codeBlock}\r\nHowever due to the bundle splitting approach, the different dependent bundles must be added manually,\r\ne.g. like described in the exported sample file ${codeSpan(\r\n      SAMPLE_INDEX_FILENAME\r\n    )}.\r\nIn order to get those script you can run the script ${codeSpan(\r\n      COPY_BUNDLES_SCRIPT_FILENAME\r\n    )} file.\r\n${codeBlock}\r\n  node ./${COPY_BUNDLES_SCRIPT_FILENAME}\r\n${codeBlock}\r\n>  For more information about [web components and browser support](https://github.com/WebComponents/webcomponentsjs#browser-support)\r\n`;\r\n  }\r\n\r\n  private renderElementModule(\r\n    name: string,\r\n    options: WebCodeGenOptions,\r\n    componentPathName: string\r\n  ) {\r\n    const className = this.formatService.className(name);\r\n    const componentName = `${className}Component`;\r\n    const normalizedName = this.formatService.normalizeName(name);\r\n    const tagName = `${options.xmlPrefix}${normalizedName}`;\r\n    return (\r\n      '' +\r\n      `\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, Injector } from '@angular/core';\r\nimport { createCustomElement } from '@angular/elements';\r\nimport { ${componentName} } from './${componentPathName}';\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule\r\n  ],\r\n  declarations: [\r\n    ${componentName}\r\n  ],\r\n  entryComponents: [\r\n    ${componentName}\r\n  ],\r\n})\r\nexport class AppModule {\r\n  constructor(injector: Injector) {\r\n    const element = createCustomElement(${componentName} , { injector });\r\n    customElements.define('${tagName}', element);\r\n  }\r\n  ngDoBootstrap() { }\r\n}\r\n    `\r\n    );\r\n  }\r\n\r\n  private renderWebpackExtra() {\r\n    return `\r\nmodule.exports = {\r\n  \"externals\": {\r\n      \"rxjs\": \"rxjs\",\r\n      \"@angular/core\": \"ng.core\",\r\n      \"@angular/common\": \"ng.common\",\r\n      \"@angular/platform-browser\": \"ng.platformBrowser\",\r\n      \"@angular/elements\": \"ng.elements\"\r\n  }\r\n}\r\n    `;\r\n  }\r\n\r\n  private renderCopyUmdBundlesScript() {\r\n    return `\r\n//\r\n// This script copies over UMD bundles to the folder dist/bundles\r\n// If you call it manually, call it from your projects root\r\n// > node /${COPY_BUNDLES_SCRIPT_FILENAME}\r\n//\r\nconst copy = require('copy');\r\nconsole.log('Copy UMD bundles ...');\r\ncopy('node_modules/@angular/*/bundles/*.umd.js', '${BUNDLES_TARGET_PATH}', {}, _ => {});\r\ncopy('node_modules/rxjs/bundles/*.js', '${BUNDLES_TARGET_PATH}/rxjs', {}, _ => {});\r\ncopy('node_modules/zone.js/dist/*.js', '${BUNDLES_TARGET_PATH}/zone.js', {}, _ => {});\r\ncopy('node_modules/core-js/client/*.js', '${BUNDLES_TARGET_PATH}/core-js', {}, _ => {});\r\ncopy('node_modules/@webcomponents/custom-elements/*.js', '${BUNDLES_TARGET_PATH}/custom-elements', {}, _ => {});\r\ncopy('node_modules/@webcomponents/custom-elements/src/native-shim*.js', '${BUNDLES_TARGET_PATH}/custom-elements/src', {}, _ => {});\r\n    `;\r\n  }\r\n\r\n  private renderSampleIndexHtml(name: string, options: WebCodeGenOptions) {\r\n    const normalizedName = this.formatService.normalizeName(name);\r\n    const tagName = `${options.xmlPrefix}${normalizedName}`;\r\n\r\n    return `\r\n<!doctype html>\r\n<html lang=\"en\">\r\n<head>\r\n<meta charset=\"utf-8\">\r\n<title>ElementsLoading</title>\r\n<base href=\".\">\r\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n<link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\r\n</head>\r\n<body>\r\n<!-- Consider putting the following UMD (!) bundles -->\r\n<!-- into a big one -->\r\n<!-- core-js for legacy browsers -->\r\n<script src=\"./${BUNDLES_TARGET_PATH}/core-js/core.js\"></script>\r\n<!-- Zone.js -->\r\n<!--\r\n    Consider excluding zone.js when creating\r\n    custom Elements by using the noop zone.\r\n-->\r\n<script src=\"./${BUNDLES_TARGET_PATH}/zone.js/zone.js\"></script>\r\n<!--\r\n    Polyfills for Browsers supporting\r\n    Custom Elements. Needed b/c we downlevel\r\n    to ES5. See: @webcomponents/custom-elements\r\n-->\r\n<script src=\"./${BUNDLES_TARGET_PATH}/custom-elements/src/native-shim.js\"></script>\r\n<!-- Polyfills for Browsers not supporting\r\n        Custom Elements. See: @webcomponents/custom-elements\r\n-->\r\n<script src=\"./${BUNDLES_TARGET_PATH}/custom-elements/custom-elements.min.js\"></script>\r\n<!-- Rx -->\r\n<script src=\"./${BUNDLES_TARGET_PATH}/rxjs/rxjs.umd.js\"></script>\r\n<!-- Angular Packages -->\r\n<script src=\"./${BUNDLES_TARGET_PATH}/core/bundles/core.umd.js\"></script>\r\n<script src=\"./${BUNDLES_TARGET_PATH}/common/bundles/common.umd.js\"></script>\r\n<script src=\"./${BUNDLES_TARGET_PATH}/platform-browser/bundles/platform-browser.umd.js\"></script>\r\n<script src=\"./${BUNDLES_TARGET_PATH}/elements/bundles/elements.umd.js\"></script>\r\n<!-- Angular Element -->\r\n<script src=\"./${DIST_FOLDER_NAME}/${ELEMENT_CREATOR_APPNAME}/${ELEMENT_BUNDLE_FILENAME}\"></script>\r\n<!-- Calling Custom Element -->\r\n<${tagName}></${tagName}>\r\n</body>\r\n</html>\r\n    `;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ImageService, SymbolService, LayerService } from '@xlayers/sketch-lib';\r\nimport { WebCodeGenService } from '@xlayers/web-codegen';\r\nimport { AngularElementAggregatorService } from './angular-element-aggregator.service';\r\n\r\ntype WebCodeGenOptions = any;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AngularElementCodeGenService {\r\n  constructor(\r\n    private readonly symbolService: SymbolService,\r\n    private readonly imageService: ImageService,\r\n    private readonly webCodeGen: WebCodeGenService,\r\n    private readonly angularElementAggretatorService: AngularElementAggregatorService,\r\n    private readonly layerService: LayerService\r\n  ) {}\r\n\r\n  compute(\r\n    current: SketchMSLayer,\r\n    data: SketchMSData,\r\n    options?: WebCodeGenOptions\r\n  ) {\r\n    this.webCodeGen.compute(current, data, this.compileOptions(options));\r\n  }\r\n\r\n  aggregate(data: SketchMSData, options?: WebCodeGenOptions) {\r\n    return data.pages.flatMap(page =>\r\n      this.visit(page, data, this.compileOptions(options))\r\n    );\r\n  }\r\n\r\n  identify(current: SketchMSLayer) {\r\n    return this.webCodeGen.identify(current);\r\n  }\r\n\r\n  context(current: SketchMSLayer) {\r\n    return this.webCodeGen.context(current);\r\n  }\r\n\r\n  private visit(\r\n    current: SketchMSLayer,\r\n    data: SketchMSData,\r\n    options?: WebCodeGenOptions\r\n  ) {\r\n    return this.visitContent(current, data, options).concat(\r\n      this.angularElementAggretatorService.aggregate(current, data, options)\r\n    );\r\n  }\r\n\r\n  private visitContent(\r\n    current: SketchMSLayer,\r\n    data: SketchMSData,\r\n    options: WebCodeGenOptions\r\n  ) {\r\n    if (this.layerService.identify(current)) {\r\n      return this.visitLayer(current, data, options);\r\n    } else if (this.symbolService.identify(current)) {\r\n      return this.visitSymbolMaster(current, data, options);\r\n    } else if (this.imageService.identify(current)) {\r\n      return this.imageService.aggregate(current, data, options);\r\n    }\r\n    return [];\r\n  }\r\n\r\n  private visitLayer(\r\n    current: SketchMSLayer,\r\n    data: SketchMSData,\r\n    options: WebCodeGenOptions\r\n  ) {\r\n    return this.layerService\r\n      .lookup(current)\r\n      .flatMap(layer => this.visitContent(layer, data, options));\r\n  }\r\n\r\n  private visitSymbolMaster(\r\n    current: SketchMSLayer,\r\n    data: SketchMSData,\r\n    options: WebCodeGenOptions\r\n  ) {\r\n    const symbolMaster = this.symbolService.lookup(current, data);\r\n    if (symbolMaster) {\r\n      return this.visit(symbolMaster, data, options);\r\n    }\r\n    return [];\r\n  }\r\n\r\n  private compileOptions(options: WebCodeGenOptions) {\r\n    return {\r\n      textTagName: 'span',\r\n      bitmapTagName: 'img',\r\n      blockTagName: 'div',\r\n      xmlPrefix: 'xly-',\r\n      cssPrefix: 'xly_',\r\n      componentDir: 'components',\r\n      assetDir: 'assets',\r\n      ...options\r\n    };\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { WebCodeGenModule } from '@xlayers/web-codegen';\r\n\r\n@NgModule({\r\n  imports: [WebCodeGenModule]\r\n})\r\nexport class AngularCodeGenModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { WebCodeGenModule } from '@xlayers/web-codegen';\r\nimport { AngularCodeGenModule } from '../angular-codegen.module';\r\n\r\n@NgModule({\r\n  imports: [WebCodeGenModule, AngularCodeGenModule]\r\n})\r\nexport class AngularElementCodeGenModule {}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AngularDocGenService {\r\n  aggregate(data: SketchMSData) {\r\n    return [\r\n      {\r\n        uri: 'README.md',\r\n        value: this.renderReadme(data.meta.app),\r\n        language: 'markdown',\r\n        kind: 'text'\r\n      }\r\n    ];\r\n  }\r\n\r\n  private renderReadme(name: string) {\r\n    return `\\\r\n## How to use the ${name} Angular module\r\n\r\n1. Download and extract the exported module into your workspace,\r\n\r\n2. Option #1: Import eagerly the XlayersModule into your AppModule or other module.\r\n\\`\\`\\`\r\nimport { XlayersModule } from './xlayers/xlayers.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    XlayersModule,\r\n    ...\r\n  ],\r\n})\r\nexport class AppModule {}\r\n\\`\\`\\`\r\n\r\n2. Option #2: Import lazily the XlayersModule routing configuration into your AppModule or other module.\r\nMake sure your router is setup properly in order to use this option (see: https://angular.io/guide/lazy-loading-ngmodules).\r\n\r\n\\`\\`\\`\r\nimport { XlayersRoutingModule } from './xlayers/xlayers-routing.module';\r\n@NgModule({\r\n  imports: [\r\n    XlayersRoutingModule,\r\n    ...\r\n  ],\r\n})\r\nexport class AppModule {}\r\n\\`\\`\\`\r\n\r\n3. Enjoy.`;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormatService } from '@xlayers/sketch-lib';\r\n\r\ntype WebCodeGenOptions = any;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AngularBootstrapService {\r\n  constructor(private readonly formatService: FormatService) {}\r\n\r\n  generate(files) {\r\n    return [\r\n      {\r\n        uri: 'xlayers-routing.module.ts',\r\n        value: this.renderRoutingModule(),\r\n        language: 'typescript',\r\n        kind: 'angular'\r\n      },\r\n      {\r\n        uri: 'xlayers.module.ts',\r\n        value: this.renderModule(files),\r\n        language: 'typescript',\r\n        kind: 'angular'\r\n      }\r\n    ];\r\n  }\r\n\r\n  private renderRoutingModule() {\r\n    return `\\\r\nimport { NgModule } from '@angular/core'\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst xlayersRoutes: Routes = [{\r\n  path: 'xlayers',\\\r\n  loadChildren: 'app/xlayers/xlayers.module#XlayersModule'\r\n}];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forChild(xlayersRoutes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class XlayersRoutingModule {}`;\r\n  }\r\n\r\n  private renderModule(files) {\r\n    const importStatements = this.renderImports(files);\r\n    const ngStatements = this.renderNgClasses(files);\r\n    return `\\\r\n${importStatements}\r\n\r\n@NgModule({\r\n  declarations: [\r\n${ngStatements}\r\n  ],\r\n  exports: [\r\n${ngStatements}\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ]\r\n})\r\nexport class XlayersModule {}`;\r\n  }\r\n\r\n  private renderImports(files) {\r\n    return [\r\n      'import { NgModule } from \\'@angular/core\\';',\r\n      'import { CommonModule } from \\'@angular/common\\';'\r\n    ]\r\n      .concat(\r\n        files\r\n          .filter(file => file.uri.endsWith('.component.ts'))\r\n          .map(\r\n            file =>\r\n              `import { ${this.extractClassName(\r\n                file\r\n              )} } from './${this.extractCompenentFileName(file)}';`\r\n          )\r\n      )\r\n      .join('\\n');\r\n  }\r\n\r\n  private renderNgClasses(files) {\r\n    return files\r\n      .filter(file => file.uri.endsWith('.component.ts'))\r\n      .map(file => this.formatService.indent(2, this.extractClassName(file)))\r\n      .join(',\\n');\r\n  }\r\n\r\n  private extractClassName(file) {\r\n    const uri = file.uri.split('/');\r\n    const fileName = uri[uri.length - 1].replace('.component.ts', '');\r\n    return this.formatService.className(`${fileName}Component`);\r\n  }\r\n\r\n  private extractCompenentFileName(file) {\r\n    return file.uri.split('.ts')[0];\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ImageService,\r\n  SymbolService,\r\n  LayerService,\r\n  FormatService\r\n} from '@xlayers/sketch-lib';\r\nimport { WebCodeGenService } from '@xlayers/web-codegen';\r\nimport { AngularAggregatorService } from './angular-aggregator.service';\r\n\r\ntype WebCodeGenOptions = any;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AngularCodeGenService {\r\n  constructor(\r\n    private readonly symbolService: SymbolService,\r\n    private readonly imageService: ImageService,\r\n    private readonly webCodeGen: WebCodeGenService,\r\n    private readonly formatService: FormatService,\r\n    private readonly angularAggretatorService: AngularAggregatorService,\r\n    private readonly layerService: LayerService\r\n  ) {}\r\n\r\n  compute(\r\n    current: SketchMSLayer,\r\n    data: SketchMSData,\r\n    options?: WebCodeGenOptions\r\n  ) {\r\n    this.webCodeGen.compute(current, data, this.compileOptions(options));\r\n  }\r\n\r\n  aggregate(data: SketchMSData, options?: WebCodeGenOptions) {\r\n    const files = data.pages.flatMap(page =>\r\n      this.visit(page, data, this.compileOptions(options))\r\n    );\r\n\r\n    return [\r\n      {\r\n        uri: 'xlayers-routing.module.ts',\r\n        value: this.renderRoutingModule(),\r\n        language: 'typescript',\r\n        kind: 'angular'\r\n      },\r\n      {\r\n        uri: 'xlayers.module.ts',\r\n        value: this.renderModule(files),\r\n        language: 'typescript',\r\n        kind: 'angular'\r\n      },\r\n      ...files\r\n    ];\r\n  }\r\n\r\n  identify(current: SketchMSLayer) {\r\n    return this.webCodeGen.identify(current);\r\n  }\r\n\r\n  context(current: SketchMSLayer) {\r\n    return this.webCodeGen.context(current);\r\n  }\r\n\r\n  private visit(\r\n    current: SketchMSLayer,\r\n    data: SketchMSData,\r\n    options?: WebCodeGenOptions\r\n  ) {\r\n    return this.visitContent(current, data, options).concat(\r\n      this.angularAggretatorService.aggregate(current, data, options)\r\n    );\r\n  }\r\n\r\n  private visitContent(\r\n    current: SketchMSLayer,\r\n    data: SketchMSData,\r\n    options: WebCodeGenOptions\r\n  ) {\r\n    if (this.layerService.identify(current)) {\r\n      return this.visitLayer(current, data, options);\r\n    } else if (this.symbolService.identify(current)) {\r\n      return this.visitSymbolMaster(current, data, options);\r\n    } else if (this.imageService.identify(current)) {\r\n      return this.imageService.aggregate(current, data, options);\r\n    }\r\n    return [];\r\n  }\r\n\r\n  private visitLayer(\r\n    current: SketchMSLayer,\r\n    data: SketchMSData,\r\n    options: WebCodeGenOptions\r\n  ) {\r\n    return this.layerService\r\n      .lookup(current)\r\n      .flatMap(layer => this.visitContent(layer, data, options));\r\n  }\r\n\r\n  private visitSymbolMaster(\r\n    current: SketchMSLayer,\r\n    data: SketchMSData,\r\n    options: WebCodeGenOptions\r\n  ) {\r\n    const symbolMaster = this.symbolService.lookup(current, data);\r\n    if (symbolMaster) {\r\n      return this.visit(symbolMaster, data, options);\r\n    }\r\n    return [];\r\n  }\r\n\r\n  private compileOptions(options: WebCodeGenOptions) {\r\n    return {\r\n      textTagName: 'span',\r\n      bitmapTagName: 'img',\r\n      blockTagName: 'div',\r\n      xmlPrefix: 'xly-',\r\n      cssPrefix: 'xly_',\r\n      componentDir: 'components',\r\n      assetDir: 'assets',\r\n      ...options\r\n    };\r\n  }\r\n\r\n  private renderRoutingModule() {\r\n    return `\\\r\nimport { NgModule } from '@angular/core'\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst xlayersRoutes: Routes = [{\r\n  path: 'xlayers\\\r\n  loadChildren: 'app/xlayers/xlayers.module#XlayersModule'\r\n}];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forChild(xlayersRoutes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class XlayersRoutingModule {}`;\r\n  }\r\n\r\n  private renderModule(files) {\r\n    const importStatements = this.renderImports(files);\r\n    const ngStatements = this.renderNgClasses(files);\r\n    return `\\\r\n${importStatements}\r\n\r\n@NgModule({\r\n  declarations: [\r\n${ngStatements}\r\n  ],\r\n  exports: [\r\n${ngStatements}\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ]\r\n})\r\nexport class XlayersModule {}`;\r\n  }\r\n\r\n  private renderImports(files) {\r\n    return [\r\n      'import { NgModule } from \\'@angular/core\\';',\r\n      'import { CommonModule } from \\'@angular/common\\';'\r\n    ]\r\n      .concat(\r\n        files\r\n          .filter(file => file.uri.endsWith('.component.ts'))\r\n          .map(\r\n            file =>\r\n              `import { ${this.extractClassName(\r\n                file\r\n              )} } from './${this.extractCompenentFileName(file)}';`\r\n          )\r\n      )\r\n      .join('\\n');\r\n  }\r\n\r\n  private renderNgClasses(files) {\r\n    return files\r\n      .filter(file => file.uri.endsWith('.component.ts'))\r\n      .map(file => this.formatService.indent(2, this.extractClassName(file)))\r\n      .join(',\\n');\r\n  }\r\n\r\n  private extractClassName(file) {\r\n    const uri = file.uri.split('/');\r\n    const fileName = uri[uri.length - 1].replace('.component.ts', '');\r\n    return this.formatService.className(`${fileName}Component`);\r\n  }\r\n\r\n  private extractCompenentFileName(file) {\r\n    return file.uri.split('.ts')[0];\r\n  }\r\n}\r\n"]}