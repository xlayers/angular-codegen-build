!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/core"),require("@xlayers/sketch-lib"),require("@xlayers/web-codegen")):"function"==typeof define&&define.amd?define("@xlayers/angular-codegen",["exports","@angular/core","@xlayers/sketch-lib","@xlayers/web-codegen"],n):n(((e=e||self).xlayers=e.xlayers||{},e.xlayers["angular-codegen"]={}),e.ng.core,e.sketchLib,e.webCodegen)}(this,(function(e,n,t,r){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */var o=function(){return(o=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var o in n=arguments[t])Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o]);return e}).apply(this,arguments)};function i(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),s=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)s.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return s}function s(){for(var e=[],n=0;n<arguments.length;n++)e=e.concat(i(arguments[n]));return e}var a=function(){function e(e,n){this.formatService=e,this.webCodeGenService=n}return e.prototype.aggregate=function(e,n,t){var r=this.formatService.normalizeName(e.name);return s(this.webCodeGenService.aggregate(e,n,t).map((function(e){switch(e.language){case"html":return o({},e,{kind:"angular",uri:t.componentDir+"/"+r+".component.html"});case"css":return o({},e,{kind:"angular",uri:t.componentDir+"/"+r+".component.css"});default:return o({},e,{kind:"angular"})}})),[{kind:"angular",value:this.renderComponent(e.name,t),language:"typescript",uri:t.componentDir+"/"+r+".component.ts"},{kind:"angular",value:this.renderSpec(e.name),language:"typescript",uri:t.componentDir+"/"+r+".spec.ts"}])},e.prototype.renderComponent=function(e,n){var t=this.formatService.className(e),r=this.formatService.normalizeName(e);return"import { Component } from '@angular/core';\n\n@Component({\n  selector: '"+(""+n.xmlPrefix+r)+"',\n  templateUrl: './"+r+".component.html',\n  styleUrls: ['./"+r+".component.css']\n})\nexport class "+t+"Component {}"},e.prototype.renderSpec=function(e){var n=this.formatService.className(e);return"import { async, ComponentFixture, TestBed } from '@angular/core/testing';\nimport { "+n+' } from "./'+this.formatService.normalizeName(e)+"\";\n\ndescribe('"+n+"Component', () => {\n  let component: "+n+"Component;\n  let fixture: ComponentFixture<"+n+"Component>;\n\n  beforeEach(async(() => {\n    TestBed.configureTestingModule({\n      declarations: ["+n+"Component]\n    })\n    .compileComponents();\n  }));\n\n  beforeEach(() => {\n    fixture = TestBed.createComponent("+n+"Component);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});"},e.decorators=[{type:n.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:t.FormatService},{type:r.WebCodeGenService}]},e.ngInjectableDef=n.ɵɵdefineInjectable({factory:function(){return new e(n.ɵɵinject(t.FormatService),n.ɵɵinject(r.WebCodeGenService))},token:e,providedIn:"root"}),e}();var l=function(){function e(e,n,t){this.formatService=e,this.webCodeGenService=n,this.angularAggregatorService=t}return e.prototype.aggregate=function(e,n,t){var r=this.formatService.normalizeName(e.name),i=t.componentDir+"/"+r+".component";return s([{uri:"README.md",value:this.renderReadme(n.meta.app,t),language:"markdown",kind:"text"}],this.webCodeGenService.aggregate(e,n,t).map((function(e){switch(e.language){case"html":return o({},e,{kind:"angular",uri:t.componentDir+"/"+r+".component.html"});case"css":return o({},e,{kind:"angular",uri:t.componentDir+"/"+r+".component.css"});default:return o({},e,{kind:"angularElement"})}})),[{uri:i+".ts",value:this.angularAggregatorService.renderComponent(e.name,t),language:"typescript",kind:"angular"},{uri:"app.module.ts",value:this.renderElementModule(e.name,t,i),language:"typescript",kind:"angularElement"},{uri:"webpack.extra.js",value:this.renderWebpackExtra(),language:"javascript",kind:"angularElement"},{uri:"copy.bundles.js",value:this.renderCopyUmdBundlesScript(),language:"javascript",kind:"angularElement"},{uri:"index.html",value:this.renderSampleIndexHtml(e.name,t),language:"html",kind:"angularElement"}])},e.prototype.renderReadme=function(e,n){var t=this.formatService.className(e),r=this.formatService.normalizeName(e),o=""+n.xmlPrefix+r,i=function(e){return"`"+e+"`"};return"\n**Notice:**\nThe current implement of [Angular Elements](https://angular.io/guide/elements) is in MVP (minimum viable product) state.\nSome features like content projection are not supported yet.\nKeep in mind that the following build process and feature support will be improved in the future.\nThe creation of the bundled Angular Element is based on the process defined by [Manfred Steyer](https://twitter.com/manfredsteyer)'s example from\n["+i("ngx-build-plus")+"](https://github.com/manfredsteyer/ngx-build-plus).\n## How to use the "+i(e)+" Angular Element\n1. In order to use an Angular Element as a web component, it first needs to be created, e.g. in the following way:\n    a) Use the Angular CLI to create a minimal app which will be used to create the Angular Element:\n    ```\n    ng new element-creator --minimal --style css --routing false\n    cd element-creator\n    ```\n    b) Add necessary dependencies for the following steps:\n    ```\n    ng add @angular/elements\n    ng add ngx-build-plus\n    npm install @webcomponents/custom-elements --save\n    npm install --save-dev copy\n    ```\n    c) Download and extract the files of this generation. Place the files of the "+i(t)+"\n    into your standard "+i("src/app")+" folder. Replace the "+i("app.module.ts")+" and remove the sample "+i("app.component.ts")+".\n    Extract the files "+i("webpack.extra.js")+" and "+i("copy.bundles.js")+" into the project root.\n    e) Build the Angular Element:\n    ```\n    ng build --prod --extraWebpackConfig webpack.extra.js --output-hashing none --single-bundle true\n    ```\n2. After the creation of the Angular Element, it can be found as single file\nweb component "+i("dist/element-creator/main.js")+' and can be consumed in the following way:\n```\n  // index.html\n  <script src="./dist/element-creator/main.js"><\/script>\n  <'+o+"></"+o+">\n```\nHowever due to the bundle splitting approach, the different dependent bundles must be added manually,\ne.g. like described in the exported sample file "+i("index.html")+".\nIn order to get those script you can run the script "+i("copy.bundles.js")+" file.\n```\n  node ./copy.bundles.js\n```\n>  For more information about [web components and browser support](https://github.com/WebComponents/webcomponentsjs#browser-support)\n"},e.prototype.renderElementModule=function(e,n,t){var r=this.formatService.className(e)+"Component",o=this.formatService.normalizeName(e);return"\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, Injector } from '@angular/core';\nimport { createCustomElement } from '@angular/elements';\nimport { "+r+" } from './"+t+"';\n@NgModule({\n  imports: [\n    BrowserModule\n  ],\n  declarations: [\n    "+r+"\n  ],\n  entryComponents: [\n    "+r+"\n  ],\n})\nexport class AppModule {\n  constructor(injector: Injector) {\n    const element = createCustomElement("+r+" , { injector });\n    customElements.define('"+(""+n.xmlPrefix+o)+"', element);\n  }\n  ngDoBootstrap() { }\n}\n    "},e.prototype.renderWebpackExtra=function(){return'\nmodule.exports = {\n  "externals": {\n      "rxjs": "rxjs",\n      "@angular/core": "ng.core",\n      "@angular/common": "ng.common",\n      "@angular/platform-browser": "ng.platformBrowser",\n      "@angular/elements": "ng.elements"\n  }\n}\n    '},e.prototype.renderCopyUmdBundlesScript=function(){return"\n//\n// This script copies over UMD bundles to the folder dist/bundles\n// If you call it manually, call it from your projects root\n// > node /copy.bundles.js\n//\nconst copy = require('copy');\nconsole.log('Copy UMD bundles ...');\ncopy('node_modules/@angular/*/bundles/*.umd.js', 'dist/bundles', {}, _ => {});\ncopy('node_modules/rxjs/bundles/*.js', 'dist/bundles/rxjs', {}, _ => {});\ncopy('node_modules/zone.js/dist/*.js', 'dist/bundles/zone.js', {}, _ => {});\ncopy('node_modules/core-js/client/*.js', 'dist/bundles/core-js', {}, _ => {});\ncopy('node_modules/@webcomponents/custom-elements/*.js', 'dist/bundles/custom-elements', {}, _ => {});\ncopy('node_modules/@webcomponents/custom-elements/src/native-shim*.js', 'dist/bundles/custom-elements/src', {}, _ => {});\n    "},e.prototype.renderSampleIndexHtml=function(e,n){var t=this.formatService.normalizeName(e),r=""+n.xmlPrefix+t;return'\n<!doctype html>\n<html lang="en">\n<head>\n<meta charset="utf-8">\n<title>ElementsLoading</title>\n<base href=".">\n<meta name="viewport" content="width=device-width, initial-scale=1">\n<link rel="icon" type="image/x-icon" href="favicon.ico">\n</head>\n<body>\n\x3c!-- Consider putting the following UMD (!) bundles --\x3e\n\x3c!-- into a big one --\x3e\n\x3c!-- core-js for legacy browsers --\x3e\n<script src="./dist/bundles/core-js/core.js"><\/script>\n\x3c!-- Zone.js --\x3e\n\x3c!--\n    Consider excluding zone.js when creating\n    custom Elements by using the noop zone.\n--\x3e\n<script src="./dist/bundles/zone.js/zone.js"><\/script>\n\x3c!--\n    Polyfills for Browsers supporting\n    Custom Elements. Needed b/c we downlevel\n    to ES5. See: @webcomponents/custom-elements\n--\x3e\n<script src="./dist/bundles/custom-elements/src/native-shim.js"><\/script>\n\x3c!-- Polyfills for Browsers not supporting\n        Custom Elements. See: @webcomponents/custom-elements\n--\x3e\n<script src="./dist/bundles/custom-elements/custom-elements.min.js"><\/script>\n\x3c!-- Rx --\x3e\n<script src="./dist/bundles/rxjs/rxjs.umd.js"><\/script>\n\x3c!-- Angular Packages --\x3e\n<script src="./dist/bundles/core/bundles/core.umd.js"><\/script>\n<script src="./dist/bundles/common/bundles/common.umd.js"><\/script>\n<script src="./dist/bundles/platform-browser/bundles/platform-browser.umd.js"><\/script>\n<script src="./dist/bundles/elements/bundles/elements.umd.js"><\/script>\n\x3c!-- Angular Element --\x3e\n<script src="./dist/element-creator/main.js"><\/script>\n\x3c!-- Calling Custom Element --\x3e\n<'+r+"></"+r+">\n</body>\n</html>\n    "},e.decorators=[{type:n.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:t.FormatService},{type:r.WebCodeGenService},{type:a}]},e.ngInjectableDef=n.ɵɵdefineInjectable({factory:function(){return new e(n.ɵɵinject(t.FormatService),n.ɵɵinject(r.WebCodeGenService),n.ɵɵinject(a))},token:e,providedIn:"root"}),e}();var c=function(){function e(e,n,t,r,o){this.symbolService=e,this.imageService=n,this.webCodeGen=t,this.angularElementAggretatorService=r,this.layerService=o}return e.prototype.compute=function(e,n,t){this.webCodeGen.compute(e,n,this.compileOptions(t))},e.prototype.aggregate=function(e,n){var t=this;return e.pages.flatMap((function(r){return t.visit(r,e,t.compileOptions(n))}))},e.prototype.identify=function(e){return this.webCodeGen.identify(e)},e.prototype.context=function(e){return this.webCodeGen.context(e)},e.prototype.visit=function(e,n,t){return this.visitContent(e,n,t).concat(this.angularElementAggretatorService.aggregate(e,n,t))},e.prototype.visitContent=function(e,n,t){return this.layerService.identify(e)?this.visitLayer(e,n,t):this.symbolService.identify(e)?this.visitSymbolMaster(e,n,t):this.imageService.identify(e)?this.imageService.aggregate(e,n,t):[]},e.prototype.visitLayer=function(e,n,t){var r=this;return this.layerService.lookup(e).flatMap((function(e){return r.visitContent(e,n,t)}))},e.prototype.visitSymbolMaster=function(e,n,t){var r=this.symbolService.lookup(e,n);return r?this.visit(r,n,t):[]},e.prototype.compileOptions=function(e){return o({textTagName:"span",bitmapTagName:"img",blockTagName:"div",xmlPrefix:"xly-",cssPrefix:"xly_",componentDir:"components",assetDir:"assets"},e)},e.decorators=[{type:n.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:t.SymbolService},{type:t.ImageService},{type:r.WebCodeGenService},{type:l},{type:t.LayerService}]},e.ngInjectableDef=n.ɵɵdefineInjectable({factory:function(){return new e(n.ɵɵinject(t.SymbolService),n.ɵɵinject(t.ImageService),n.ɵɵinject(r.WebCodeGenService),n.ɵɵinject(l),n.ɵɵinject(t.LayerService))},token:e,providedIn:"root"}),e}();var u=function(){function e(){}return e.decorators=[{type:n.NgModule,args:[{imports:[r.WebCodeGenModule]}]}],e}(),p=function(){function e(){}return e.decorators=[{type:n.NgModule,args:[{imports:[r.WebCodeGenModule,u]}]}],e}(),m=function(){function e(){}return e.prototype.aggregate=function(e){return[{uri:"README.md",value:this.renderReadme(e.meta.app),language:"markdown",kind:"text"}]},e.prototype.renderReadme=function(e){return"## How to use the "+e+" Angular module\n\n1. Download and extract the exported module into your workspace,\n\n2. Option #1: Import eagerly the XlayersModule into your AppModule or other module.\n```\nimport { XlayersModule } from './xlayers/xlayers.module';\n\n@NgModule({\n  imports: [\n    XlayersModule,\n    ...\n  ],\n})\nexport class AppModule {}\n```\n\n2. Option #2: Import lazily the XlayersModule routing configuration into your AppModule or other module.\nMake sure your router is setup properly in order to use this option (see: https://angular.io/guide/lazy-loading-ngmodules).\n\n```\nimport { XlayersRoutingModule } from './xlayers/xlayers-routing.module';\n@NgModule({\n  imports: [\n    XlayersRoutingModule,\n    ...\n  ],\n})\nexport class AppModule {}\n```\n\n3. Enjoy."},e.decorators=[{type:n.Injectable,args:[{providedIn:"root"}]}],e.ngInjectableDef=n.ɵɵdefineInjectable({factory:function(){return new e},token:e,providedIn:"root"}),e}(),d=function(){function e(e){this.formatService=e}return e.prototype.generate=function(e){return[{uri:"xlayers-routing.module.ts",value:this.renderRoutingModule(),language:"typescript",kind:"angular"},{uri:"xlayers.module.ts",value:this.renderModule(e),language:"typescript",kind:"angular"}]},e.prototype.renderRoutingModule=function(){return"import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router';\n\nconst xlayersRoutes: Routes = [{\n  path: 'xlayers',  loadChildren: 'app/xlayers/xlayers.module#XlayersModule'\n}];\n\n@NgModule({\n  imports: [ RouterModule.forChild(xlayersRoutes) ],\n  exports: [ RouterModule ]\n})\nexport class XlayersRoutingModule {}"},e.prototype.renderModule=function(e){var n=this.renderImports(e),t=this.renderNgClasses(e);return n+"\n\n@NgModule({\n  declarations: [\n"+t+"\n  ],\n  exports: [\n"+t+"\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class XlayersModule {}"},e.prototype.renderImports=function(e){var n=this;return["import { NgModule } from '@angular/core';","import { CommonModule } from '@angular/common';"].concat(e.filter((function(e){return e.uri.endsWith(".component.ts")})).map((function(e){return"import { "+n.extractClassName(e)+" } from './"+n.extractCompenentFileName(e)+"';"}))).join("\n")},e.prototype.renderNgClasses=function(e){var n=this;return e.filter((function(e){return e.uri.endsWith(".component.ts")})).map((function(e){return n.formatService.indent(2,n.extractClassName(e))})).join(",\n")},e.prototype.extractClassName=function(e){var n=e.uri.split("/"),t=n[n.length-1].replace(".component.ts","");return this.formatService.className(t+"Component")},e.prototype.extractCompenentFileName=function(e){return e.uri.split(".ts")[0]},e.decorators=[{type:n.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:t.FormatService}]},e.ngInjectableDef=n.ɵɵdefineInjectable({factory:function(){return new e(n.ɵɵinject(t.FormatService))},token:e,providedIn:"root"}),e}();var g=function(){function e(e,n,t,r,o,i){this.symbolService=e,this.imageService=n,this.webCodeGen=t,this.formatService=r,this.angularAggretatorService=o,this.layerService=i}return e.prototype.compute=function(e,n,t){this.webCodeGen.compute(e,n,this.compileOptions(t))},e.prototype.aggregate=function(e,n){var t=this,r=e.pages.flatMap((function(r){return t.visit(r,e,t.compileOptions(n))}));return s([{uri:"xlayers-routing.module.ts",value:this.renderRoutingModule(),language:"typescript",kind:"angular"},{uri:"xlayers.module.ts",value:this.renderModule(r),language:"typescript",kind:"angular"}],r)},e.prototype.identify=function(e){return this.webCodeGen.identify(e)},e.prototype.context=function(e){return this.webCodeGen.context(e)},e.prototype.visit=function(e,n,t){return this.visitContent(e,n,t).concat(this.angularAggretatorService.aggregate(e,n,t))},e.prototype.visitContent=function(e,n,t){return this.layerService.identify(e)?this.visitLayer(e,n,t):this.symbolService.identify(e)?this.visitSymbolMaster(e,n,t):this.imageService.identify(e)?this.imageService.aggregate(e,n,t):[]},e.prototype.visitLayer=function(e,n,t){var r=this;return this.layerService.lookup(e).flatMap((function(e){return r.visitContent(e,n,t)}))},e.prototype.visitSymbolMaster=function(e,n,t){var r=this.symbolService.lookup(e,n);return r?this.visit(r,n,t):[]},e.prototype.compileOptions=function(e){return o({textTagName:"span",bitmapTagName:"img",blockTagName:"div",xmlPrefix:"xly-",cssPrefix:"xly_",componentDir:"components",assetDir:"assets"},e)},e.prototype.renderRoutingModule=function(){return"import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router';\n\nconst xlayersRoutes: Routes = [{\n  path: 'xlayers  loadChildren: 'app/xlayers/xlayers.module#XlayersModule'\n}];\n\n@NgModule({\n  imports: [ RouterModule.forChild(xlayersRoutes) ],\n  exports: [ RouterModule ]\n})\nexport class XlayersRoutingModule {}"},e.prototype.renderModule=function(e){var n=this.renderImports(e),t=this.renderNgClasses(e);return n+"\n\n@NgModule({\n  declarations: [\n"+t+"\n  ],\n  exports: [\n"+t+"\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class XlayersModule {}"},e.prototype.renderImports=function(e){var n=this;return["import { NgModule } from '@angular/core';","import { CommonModule } from '@angular/common';"].concat(e.filter((function(e){return e.uri.endsWith(".component.ts")})).map((function(e){return"import { "+n.extractClassName(e)+" } from './"+n.extractCompenentFileName(e)+"';"}))).join("\n")},e.prototype.renderNgClasses=function(e){var n=this;return e.filter((function(e){return e.uri.endsWith(".component.ts")})).map((function(e){return n.formatService.indent(2,n.extractClassName(e))})).join(",\n")},e.prototype.extractClassName=function(e){var n=e.uri.split("/"),t=n[n.length-1].replace(".component.ts","");return this.formatService.className(t+"Component")},e.prototype.extractCompenentFileName=function(e){return e.uri.split(".ts")[0]},e.decorators=[{type:n.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:t.SymbolService},{type:t.ImageService},{type:r.WebCodeGenService},{type:t.FormatService},{type:a},{type:t.LayerService}]},e.ngInjectableDef=n.ɵɵdefineInjectable({factory:function(){return new e(n.ɵɵinject(t.SymbolService),n.ɵɵinject(t.ImageService),n.ɵɵinject(r.WebCodeGenService),n.ɵɵinject(t.FormatService),n.ɵɵinject(a),n.ɵɵinject(t.LayerService))},token:e,providedIn:"root"}),e}();e.AngularBootstrapService=d,e.AngularCodeGenModule=u,e.AngularCodeGenService=g,e.AngularDocGenService=m,e.AngularElementCodeGenModule=p,e.AngularElementCodeGenService=c,e.ɵa=l,e.ɵb=a,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=xlayers-angular-codegen.umd.min.js.map